diff --git a/module/glcompat.h b/module/glcompat.h
index d5b6d310f..80c37ae59 100644
--- a/module/glcompat.h
+++ b/module/glcompat.h
@@ -39,7 +39,7 @@
 
 #else
 
-	#define RENPY_OPENGL
+	#define RENPY_GLES_2
 
 #endif
 
diff --git a/renpy.py b/renpy.py
index 0c7e53012..92dd67f70 100644
--- a/renpy.py
+++ b/renpy.py
@@ -131,6 +131,9 @@ def path_to_saves(gamedir, save_directory=None):
             rv = "~/RenPy/" + renpy.config.save_directory
             return os.path.expanduser(rv)
 
+    elif renpy.switch:
+        return "sdmc:/Ren'Py Data/" + save_directory
+
     else:
         rv = "~/.renpy/" + save_directory
         return os.path.expanduser(rv)
diff --git a/renpy/__init__.py b/renpy/__init__.py
index d33dc6b59..3e37d3c0b 100644
--- a/renpy/__init__.py
+++ b/renpy/__init__.py
@@ -72,6 +72,7 @@ linux = False
 android = False
 ios = False
 emscripten = False
+switch = False
 
 # Should we enable experimental features and debugging?
 experimental = "RENPY_EXPERIMENTAL" in os.environ
@@ -126,10 +127,11 @@ elif "ANDROID_PRIVATE" in os.environ:
 elif sys.platform == 'emscripten' or "RENPY_EMSCRIPTEN" in os.environ:
     emscripten = True
 else:
-    linux = True
+    # linux = True
+    switch = True
 
 # A flag that's true if we're on a smartphone or tablet-like platform.
-mobile = android or ios or emscripten
+mobile = android or ios or emscripten or switch
 
 # A flag that's set to true if the game directory is bundled inside a mac app.
 macapp = False
diff --git a/renpy/bootstrap.py b/renpy/bootstrap.py
index 328a5b5be..5dee1db81 100644
--- a/renpy/bootstrap.py
+++ b/renpy/bootstrap.py
@@ -305,6 +305,8 @@ You may be using a system install of python. Please run {0}.sh,
 
                 if renpy.android:
                     renpy.config.logdir = os.environ['ANDROID_PUBLIC']
+                elif renpy.switch:
+                    renpy.config.logdir = os.path.abspath("sdmc:/Ren'Py Logs/")
                 else:
                     renpy.config.logdir = basedir
 
@@ -357,5 +359,5 @@ You may be using a system install of python. Please run {0}.sh,
 
         # Prevent subprocess from throwing errors while trying to run it's
         # __del__ method during shutdown.
-        if not renpy.emscripten:
+        if not (renpy.emscripten or renpy.switch):
             subprocess.Popen.__del__ = popen_del
diff --git a/renpy/config.py b/renpy/config.py
index 65338a1e2..6eef70c0d 100644
--- a/renpy/config.py
+++ b/renpy/config.py
@@ -819,7 +819,7 @@ fast_skipping_callbacks = [ ]
 
 # Should the audio periodic callback run in its own thread.
 audio_periodic_thread = True
-if renpy.emscripten:
+if renpy.emscripten or renpy.switch:
     audio_periodic_thread = False
 
 # A list of fonts to preload on Ren'Py startup.
diff --git a/renpy/gl/gldraw.pyx b/renpy/gl/gldraw.pyx
index 4e598e38d..c39345e67 100644
--- a/renpy/gl/gldraw.pyx
+++ b/renpy/gl/gldraw.pyx
@@ -523,6 +523,9 @@ cdef class GLDraw:
             # WebGL is GLES
             gltexture.use_gles()
 
+        elif renpy.switch:
+            gltexture.use_gles()
+
         else:
             gltexture.use_gl()
 
@@ -568,7 +571,7 @@ cdef class GLDraw:
 
         # Pick a texture environment subsystem.
 
-        if EGL or renpy.android or renpy.ios or renpy.emscripten or (allow_shader and use_subsystem(
+        if EGL or renpy.android or renpy.ios or renpy.emscripten or renpy.switch or (allow_shader and use_subsystem(
             glenviron_shader,
             "RENPY_GL_ENVIRON",
             "shader",
@@ -627,7 +630,7 @@ cdef class GLDraw:
                 return False
 
         # Pick a Render-to-texture method.
-        use_fbo = renpy.ios or renpy.android or renpy.emscripten or EGL or use_subsystem(
+        use_fbo = renpy.ios or renpy.android or renpy.emscripten or renpy.switch or EGL or use_subsystem(
                 glrtt_fbo,
                 "RENPY_GL_RTT",
                 "fbo",
diff --git a/renpy/loadsave.py b/renpy/loadsave.py
index 4b3898740..86102975c 100644
--- a/renpy/loadsave.py
+++ b/renpy/loadsave.py
@@ -558,6 +558,8 @@ def force_autosave(take_screenshot=False, block=False):
         t = threading.Thread(target=autosave_thread, args=(take_screenshot,))
         t.daemon = True
         t.start()
+    elif renpy.switch:
+        autosave_thread(take_screenshot)
     else:
         import emscripten
         emscripten.async_call(autosave_thread, take_screenshot, -1)
diff --git a/renpy/persistent.py b/renpy/persistent.py
index 244a0ba80..f966b4d22 100644
--- a/renpy/persistent.py
+++ b/renpy/persistent.py
@@ -468,6 +468,10 @@ def MultiPersistent(name):
     elif renpy.macintosh:
         files = [ os.path.expanduser("~/.renpy/persistent"),
                   os.path.expanduser("~/Library/RenPy/persistent") ]
+
+    elif renpy.switch:
+        files = [ "sdmc:/Ren'Py Data/persistent" ]
+
     else:
         files = [ os.path.expanduser("~/.renpy/persistent") ]
 
