diff --git a/module/ffmedia.c b/module/ffmedia.c
index 300c325aa..253204538 100644
--- a/module/ffmedia.c
+++ b/module/ffmedia.c
@@ -134,6 +134,7 @@ typedef struct SurfaceQueueEntry {
 
 typedef struct MediaState {
 
+	SDL_Thread* thread;
 
 	/* The condition and lock. */
 	SDL_cond* cond;
@@ -1329,8 +1330,13 @@ void media_start(MediaState *ms) {
 	SDL_Thread *t = SDL_CreateThread(decode_thread, buf, (void *) ms);
 
 	if (t) {
+#ifdef __SWITCH__
+		ms->thread = t;
+#endif
 		ms->started = 1;
+#ifndef __SWITCH__
 		SDL_DetachThread(t);
+#endif
 	}
 #endif
 }
@@ -1389,6 +1395,10 @@ void media_close(MediaState *ms) {
 		return;
 	}
 
+#ifdef __SWITCH__
+	SDL_Thread *t = ms->thread;
+#endif
+
 	/* Tell the decoder to terminate. It will deallocate everything for us. */
 	SDL_LockMutex(ms->lock);
 	ms->quit = 1;
@@ -1400,6 +1410,10 @@ void media_close(MediaState *ms) {
 	SDL_CondBroadcast(ms->cond);
 	SDL_UnlockMutex(ms->lock);
 
+#ifdef __SWITCH__
+	SDL_WaitThread(t, NULL);
+#endif
+
 }
 
 void media_advance_time(void) {
diff --git a/module/glcompat.h b/module/glcompat.h
index b88f09f00..674b4c0e3 100644
--- a/module/glcompat.h
+++ b/module/glcompat.h
@@ -37,6 +37,10 @@
 
     #define RENPY_GLES_2
 
+#elif defined __SWITCH__
+
+    #define RENPY_GLES_2
+
 #else
 
 	#define RENPY_OPENGL
diff --git a/renpy.py b/renpy.py
index 0c7e53012..92dd67f70 100644
--- a/renpy.py
+++ b/renpy.py
@@ -131,6 +131,9 @@ def path_to_saves(gamedir, save_directory=None):
             rv = "~/RenPy/" + renpy.config.save_directory
             return os.path.expanduser(rv)
 
+    elif renpy.switch:
+        return "sdmc:/Ren'Py Data/" + save_directory
+
     else:
         rv = "~/.renpy/" + save_directory
         return os.path.expanduser(rv)
diff --git a/renpy/__init__.py b/renpy/__init__.py
index de5524508..e8ff53123 100644
--- a/renpy/__init__.py
+++ b/renpy/__init__.py
@@ -71,6 +71,7 @@ linux = False
 android = False
 ios = False
 emscripten = False
+switch = False
 
 # Should we enable experimental features and debugging?
 experimental = "RENPY_EXPERIMENTAL" in os.environ
@@ -124,11 +125,13 @@ elif "ANDROID_PRIVATE" in os.environ:
     android = True
 elif sys.platform == 'emscripten' or "RENPY_EMSCRIPTEN" in os.environ:
     emscripten = True
+elif sys.platform == 'horizon':
+    switch = True
 else:
     linux = True
 
 # A flag that's true if we're on a smartphone or tablet-like platform.
-mobile = android or ios or emscripten
+mobile = android or ios or emscripten or switch
 
 # A flag that's set to true if the game directory is bundled inside a mac app.
 macapp = False
diff --git a/renpy/bootstrap.py b/renpy/bootstrap.py
index 8afc163b4..cea7848e0 100644
--- a/renpy/bootstrap.py
+++ b/renpy/bootstrap.py
@@ -307,6 +307,8 @@ You may be using a system install of python. Please run {0}.sh,
 
                 if renpy.android:
                     renpy.config.logdir = os.environ['ANDROID_PUBLIC']
+                elif renpy.switch:
+                    renpy.config.logdir = os.path.abspath("sdmc:/Ren'Py Logs/")
                 else:
                     renpy.config.logdir = basedir
 
@@ -359,5 +361,5 @@ You may be using a system install of python. Please run {0}.sh,
 
         # Prevent subprocess from throwing errors while trying to run it's
         # __del__ method during shutdown.
-        if not renpy.emscripten:
+        if not (renpy.emscripten or renpy.switch):
             subprocess.Popen.__del__ = popen_del
diff --git a/renpy/display/core.py b/renpy/display/core.py
index f72ecbbca..b20f73aa9 100644
--- a/renpy/display/core.py
+++ b/renpy/display/core.py
@@ -1829,6 +1829,7 @@ class Interface(object):
         """
 
         pygame.display.hint("SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS", "0")
+        pygame.display.hint("SDL_HINT_TOUCH_MOUSE_EVENTS", "1")
 
         # Needed for Unity.
         wmclass = renpy.config.save_directory or os.path.basename(sys.argv[0])
diff --git a/renpy/display/video.py b/renpy/display/video.py
index 44d236630..8f5eeb4ef 100644
--- a/renpy/display/video.py
+++ b/renpy/display/video.py
@@ -374,7 +374,7 @@ class Movie(renpy.display.core.Displayable):
 
         self.play_callback = play_callback
 
-        if (self.channel == "movie") and (renpy.config.hw_video) and renpy.mobile:
+        if (self.channel == "movie") and (renpy.config.hw_video) and (renpy.android or renpy.ios):
             raise Exception("Movie(channel='movie') doesn't work on mobile when config.hw_video is true. (Use a different channel argument.)")
 
     def render(self, width, height, st, at):
diff --git a/renpy/gl/gldraw.pyx b/renpy/gl/gldraw.pyx
index 864b2ab27..5ecff513d 100644
--- a/renpy/gl/gldraw.pyx
+++ b/renpy/gl/gldraw.pyx
@@ -321,6 +321,15 @@ cdef class GLDraw:
             pwidth = 0
             pheight = 0
 
+        elif renpy.switch:
+            opengl = pygame.OPENGL
+            resizable = pygame.RESIZABLE
+
+            pygame.display.hint("SDL_OPENGL_ES_DRIVER", "1")
+            pygame.display.gl_set_attribute(pygame.GL_CONTEXT_MAJOR_VERSION, 2);
+            pygame.display.gl_set_attribute(pygame.GL_CONTEXT_MINOR_VERSION, 0);
+            pygame.display.gl_set_attribute(pygame.GL_CONTEXT_PROFILE_MASK, pygame.GL_CONTEXT_PROFILE_ES)
+
         else:
             opengl = pygame.OPENGL
 
@@ -522,6 +531,9 @@ cdef class GLDraw:
             # WebGL is GLES
             gltexture.use_gles()
 
+        elif renpy.switch:
+            gltexture.use_gles()
+
         else:
             gltexture.use_gl()
 
@@ -567,7 +579,7 @@ cdef class GLDraw:
 
         # Pick a texture environment subsystem.
 
-        if EGL or renpy.android or renpy.ios or renpy.emscripten or (allow_shader and use_subsystem(
+        if EGL or renpy.android or renpy.ios or renpy.emscripten or renpy.switch or (allow_shader and use_subsystem(
             glenviron_shader,
             "RENPY_GL_ENVIRON",
             "shader",
@@ -626,7 +638,7 @@ cdef class GLDraw:
                 return False
 
         # Pick a Render-to-texture method.
-        use_fbo = renpy.ios or renpy.android or renpy.emscripten or EGL or use_subsystem(
+        use_fbo = renpy.ios or renpy.android or renpy.emscripten or renpy.switch or EGL or use_subsystem(
                 glrtt_fbo,
                 "RENPY_GL_RTT",
                 "fbo",
diff --git a/renpy/gl2/gl2draw.pyx b/renpy/gl2/gl2draw.pyx
index 3c70d5762..43b2dceb9 100644
--- a/renpy/gl2/gl2draw.pyx
+++ b/renpy/gl2/gl2draw.pyx
@@ -286,6 +286,9 @@ cdef class GL2Draw:
             pygame.display.gl_set_attribute(pygame.GL_CONTEXT_PROFILE_MASK, pygame.GL_CONTEXT_PROFILE_ES)
         else:
             pygame.display.hint("SDL_OPENGL_ES_DRIVER", "0")
+            pygame.display.gl_set_attribute(pygame.GL_CONTEXT_MAJOR_VERSION, 1);
+            pygame.display.gl_set_attribute(pygame.GL_CONTEXT_MINOR_VERSION, 3);
+            pygame.display.gl_set_attribute(pygame.GL_CONTEXT_PROFILE_MASK, pygame.GL_CONTEXT_PROFILE_COMPATIBILITY)
 
     def set_mode(self, virtual_size, physical_size, fullscreen):
         """
@@ -352,6 +355,10 @@ cdef class GL2Draw:
             pheight = 0
             gles = True
 
+        elif renpy.switch:
+            window_flags |= pygame.RESIZABLE
+            gles = True
+
         else:
             if self.dpi_scale == 1.0:
                 window_flags |= pygame.WINDOW_ALLOW_HIGHDPI
diff --git a/renpy/loadsave.py b/renpy/loadsave.py
index 68e9074a8..6ce276ab0 100644
--- a/renpy/loadsave.py
+++ b/renpy/loadsave.py
@@ -563,7 +563,9 @@ def force_autosave(take_screenshot=False, block=False):
 
     autosave_not_running.clear()
 
-    if not renpy.emscripten:
+    if renpy.switch:
+        autosave_thread_function(take_screenshot)
+    elif not renpy.emscripten:
         autosave_thread = threading.Thread(target=autosave_thread_function, args=(take_screenshot,))
         autosave_thread.daemon = True
         autosave_thread.start()
diff --git a/renpy/persistent.py b/renpy/persistent.py
index 244a0ba80..f966b4d22 100644
--- a/renpy/persistent.py
+++ b/renpy/persistent.py
@@ -468,6 +468,10 @@ def MultiPersistent(name):
     elif renpy.macintosh:
         files = [ os.path.expanduser("~/.renpy/persistent"),
                   os.path.expanduser("~/Library/RenPy/persistent") ]
+
+    elif renpy.switch:
+        files = [ "sdmc:/Ren'Py Data/persistent" ]
+
     else:
         files = [ os.path.expanduser("~/.renpy/persistent") ]
 
