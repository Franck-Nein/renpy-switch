diff --git a/module/glcompat.h b/module/glcompat.h
index d5b6d310f..fc66bcb50 100644
--- a/module/glcompat.h
+++ b/module/glcompat.h
@@ -37,6 +37,10 @@
 
     #define RENPY_GLES_2
 
+#elif defined __SWITCH__
+
+    #define RENPY_GLES_2
+
 #else
 
 	#define RENPY_OPENGL
diff --git a/renpy.py b/renpy.py
index 0c7e53012..33a5eeee8 100644
--- a/renpy.py
+++ b/renpy.py
@@ -37,7 +37,10 @@ import warnings
 
 
 def path_to_common(renpy_base):
-    return renpy_base + "/renpy/common"
+    if os.path.exists("romfs:/Contents/renpy/common"):
+        return "romfs:/Contents/renpy/common"
+    else:
+        return renpy_base + "/renpy/common"
 
 # Given a directory holding a Ren'Py game, this is expected to return
 # the path to a directory that will hold save files.
@@ -131,6 +134,9 @@ def path_to_saves(gamedir, save_directory=None):
             rv = "~/RenPy/" + renpy.config.save_directory
             return os.path.expanduser(rv)
 
+    elif renpy.switch:
+        return "sdmc:/Ren'Py Data/" + save_directory
+
     else:
         rv = "~/.renpy/" + save_directory
         return os.path.expanduser(rv)
diff --git a/renpy/__init__.py b/renpy/__init__.py
index e0c42d57b..c19a8a4c8 100644
--- a/renpy/__init__.py
+++ b/renpy/__init__.py
@@ -71,6 +71,7 @@ linux = False
 android = False
 ios = False
 emscripten = False
+switch = False
 
 # Should we enable experimental features and debugging?
 experimental = "RENPY_EXPERIMENTAL" in os.environ
@@ -125,10 +126,11 @@ elif "ANDROID_PRIVATE" in os.environ:
 elif sys.platform == 'emscripten' or "RENPY_EMSCRIPTEN" in os.environ:
     emscripten = True
 else:
-    linux = True
+    # linux = True
+    switch = True
 
 # A flag that's true if we're on a smartphone or tablet-like platform.
-mobile = android or ios or emscripten
+mobile = android or ios or emscripten or switch
 
 # A flag that's set to true if the game directory is bundled inside a mac app.
 macapp = False
diff --git a/renpy/bootstrap.py b/renpy/bootstrap.py
index 328a5b5be..1df01a039 100644
--- a/renpy/bootstrap.py
+++ b/renpy/bootstrap.py
@@ -232,7 +232,10 @@ def bootstrap(renpy_base):
         if os.path.isdir(gamedir):
             break
     else:
-        gamedir = basedir
+        if os.path.exists("romfs:/Contents/game"):
+            gamedir = "romfs:/Contents/game"
+        else:
+            gamedir = basedir
 
     sys.path.insert(0, basedir)
 
@@ -305,6 +308,8 @@ You may be using a system install of python. Please run {0}.sh,
 
                 if renpy.android:
                     renpy.config.logdir = os.environ['ANDROID_PUBLIC']
+                elif renpy.switch:
+                    renpy.config.logdir = os.path.abspath("sdmc:/Ren'Py Logs/")
                 else:
                     renpy.config.logdir = basedir
 
@@ -357,5 +362,5 @@ You may be using a system install of python. Please run {0}.sh,
 
         # Prevent subprocess from throwing errors while trying to run it's
         # __del__ method during shutdown.
-        if not renpy.emscripten:
+        if not (renpy.emscripten or renpy.switch):
             subprocess.Popen.__del__ = popen_del
diff --git a/renpy/display/pgrender.py b/renpy/display/pgrender.py
index c293895c9..50054e4be 100644
--- a/renpy/display/pgrender.py
+++ b/renpy/display/pgrender.py
@@ -29,6 +29,7 @@ import pygame_sdl2 as pygame
 import threading
 import renpy.display
 import renpy.audio
+import gc
 
 
 # Sample surfaces, with and without alpha.
@@ -159,6 +160,8 @@ def load_image(f, filename):
                 surf = pygame.image.load(f, renpy.exports.fsencode(filename))
 
     except Exception as e:
+        renpy.exports.free_memory()
+        gc.collect()
         raise Exception("Could not load image {!r}: {!r}".format(filename, e))
 
     rv = copy_surface_unscaled(surf)
diff --git a/renpy/display/video.py b/renpy/display/video.py
index 44d236630..8f5eeb4ef 100644
--- a/renpy/display/video.py
+++ b/renpy/display/video.py
@@ -374,7 +374,7 @@ class Movie(renpy.display.core.Displayable):
 
         self.play_callback = play_callback
 
-        if (self.channel == "movie") and (renpy.config.hw_video) and renpy.mobile:
+        if (self.channel == "movie") and (renpy.config.hw_video) and (renpy.android or renpy.ios):
             raise Exception("Movie(channel='movie') doesn't work on mobile when config.hw_video is true. (Use a different channel argument.)")
 
     def render(self, width, height, st, at):
diff --git a/renpy/gl/gldraw.pyx b/renpy/gl/gldraw.pyx
index 4e598e38d..c39345e67 100644
--- a/renpy/gl/gldraw.pyx
+++ b/renpy/gl/gldraw.pyx
@@ -523,6 +523,9 @@ cdef class GLDraw:
             # WebGL is GLES
             gltexture.use_gles()
 
+        elif renpy.switch:
+            gltexture.use_gles()
+
         else:
             gltexture.use_gl()
 
@@ -568,7 +571,7 @@ cdef class GLDraw:
 
         # Pick a texture environment subsystem.
 
-        if EGL or renpy.android or renpy.ios or renpy.emscripten or (allow_shader and use_subsystem(
+        if EGL or renpy.android or renpy.ios or renpy.emscripten or renpy.switch or (allow_shader and use_subsystem(
             glenviron_shader,
             "RENPY_GL_ENVIRON",
             "shader",
@@ -627,7 +630,7 @@ cdef class GLDraw:
                 return False
 
         # Pick a Render-to-texture method.
-        use_fbo = renpy.ios or renpy.android or renpy.emscripten or EGL or use_subsystem(
+        use_fbo = renpy.ios or renpy.android or renpy.emscripten or renpy.switch or EGL or use_subsystem(
                 glrtt_fbo,
                 "RENPY_GL_RTT",
                 "fbo",
diff --git a/renpy/persistent.py b/renpy/persistent.py
index 244a0ba80..f966b4d22 100644
--- a/renpy/persistent.py
+++ b/renpy/persistent.py
@@ -468,6 +468,10 @@ def MultiPersistent(name):
     elif renpy.macintosh:
         files = [ os.path.expanduser("~/.renpy/persistent"),
                   os.path.expanduser("~/Library/RenPy/persistent") ]
+
+    elif renpy.switch:
+        files = [ "sdmc:/Ren'Py Data/persistent" ]
+
     else:
         files = [ os.path.expanduser("~/.renpy/persistent") ]
 
